{
  "files": [
    {
      "name": "common/common.proto",
      "description": "",
      "package": "common",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ActiveStateEnum",
          "longName": "ActiveStateEnum",
          "fullName": "common.ActiveStateEnum",
          "description": "buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package",
          "values": [
            {
              "name": "ACTIVE_STATE_ENUM_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ACTIVE_STATE_ENUM_ACTIVE",
              "number": "1",
              "description": ""
            },
            {
              "name": "ACTIVE_STATE_ENUM_INACTIVE",
              "number": "2",
              "description": ""
            },
            {
              "name": "ACTIVE_STATE_ENUM_ANY",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "MetadataUpdateEnum",
          "longName": "MetadataUpdateEnum",
          "fullName": "common.MetadataUpdateEnum",
          "description": "",
          "values": [
            {
              "name": "METADATA_UPDATE_ENUM_UNSPECIFIED",
              "number": "0",
              "description": "unspecified update type"
            },
            {
              "name": "METADATA_UPDATE_ENUM_EXTEND",
              "number": "1",
              "description": "only update the fields that are provided"
            },
            {
              "name": "METADATA_UPDATE_ENUM_REPLACE",
              "number": "2",
              "description": "replace the entire metadata with the provided metadata"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Metadata",
          "longName": "Metadata",
          "fullName": "common.Metadata",
          "description": "Struct to uniquely identify a resource with optional additional metadata",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "created_at",
              "description": "created_at set by server (entity who created will recorded in an audit event)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated_at",
              "description": "updated_at set by server (entity who updated will recorded in an audit event)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "labels",
              "description": "optional short description",
              "label": "repeated",
              "type": "LabelsEntry",
              "longType": "Metadata.LabelsEntry",
              "fullType": "common.Metadata.LabelsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LabelsEntry",
          "longName": "Metadata.LabelsEntry",
          "fullName": "common.Metadata.LabelsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MetadataMutable",
          "longName": "MetadataMutable",
          "fullName": "common.MetadataMutable",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "labels",
              "description": "optional labels",
              "label": "repeated",
              "type": "LabelsEntry",
              "longType": "MetadataMutable.LabelsEntry",
              "fullType": "common.MetadataMutable.LabelsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LabelsEntry",
          "longName": "MetadataMutable.LabelsEntry",
          "fullName": "common.MetadataMutable.LabelsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "policy/objects.proto",
      "description": "",
      "package": "policy",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "StandardAction",
          "longName": "Action.StandardAction",
          "fullName": "policy.Action.StandardAction",
          "description": "Standard actions supported by the platform",
          "values": [
            {
              "name": "STANDARD_ACTION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "STANDARD_ACTION_DECRYPT",
              "number": "1",
              "description": ""
            },
            {
              "name": "STANDARD_ACTION_TRANSMIT",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "AttributeRuleTypeEnum",
          "longName": "AttributeRuleTypeEnum",
          "fullName": "policy.AttributeRuleTypeEnum",
          "description": "buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package",
          "values": [
            {
              "name": "ATTRIBUTE_RULE_TYPE_ENUM_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ATTRIBUTE_RULE_TYPE_ENUM_ALL_OF",
              "number": "1",
              "description": ""
            },
            {
              "name": "ATTRIBUTE_RULE_TYPE_ENUM_ANY_OF",
              "number": "2",
              "description": ""
            },
            {
              "name": "ATTRIBUTE_RULE_TYPE_ENUM_HIERARCHY",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "ConditionBooleanTypeEnum",
          "longName": "ConditionBooleanTypeEnum",
          "fullName": "policy.ConditionBooleanTypeEnum",
          "description": "buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package",
          "values": [
            {
              "name": "CONDITION_BOOLEAN_TYPE_ENUM_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "CONDITION_BOOLEAN_TYPE_ENUM_AND",
              "number": "1",
              "description": ""
            },
            {
              "name": "CONDITION_BOOLEAN_TYPE_ENUM_OR",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "SubjectMappingOperatorEnum",
          "longName": "SubjectMappingOperatorEnum",
          "fullName": "policy.SubjectMappingOperatorEnum",
          "description": "buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package",
          "values": [
            {
              "name": "SUBJECT_MAPPING_OPERATOR_ENUM_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "SUBJECT_MAPPING_OPERATOR_ENUM_IN",
              "number": "1",
              "description": "operator that returns true if a value in a list matches the string"
            },
            {
              "name": "SUBJECT_MAPPING_OPERATOR_ENUM_NOT_IN",
              "number": "2",
              "description": "operator that returns true if a value is not in a list that is matched by string"
            },
            {
              "name": "SUBJECT_MAPPING_OPERATOR_ENUM_IN_CONTAINS",
              "number": "3",
              "description": "operator that returns true if a value in a list contains the substring"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Action",
          "longName": "Action",
          "fullName": "policy.Action",
          "description": "An action an entity can take",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "standard",
              "description": "",
              "label": "",
              "type": "StandardAction",
              "longType": "Action.StandardAction",
              "fullType": "policy.Action.StandardAction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "custom",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Attribute",
          "longName": "Attribute",
          "fullName": "policy.Attribute",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "namespace",
              "description": "namespace of the attribute",
              "label": "",
              "type": "Namespace",
              "longType": "Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "attribute name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rule",
              "description": "attribute rule enum",
              "label": "",
              "type": "AttributeRuleTypeEnum",
              "longType": "AttributeRuleTypeEnum",
              "fullType": "policy.AttributeRuleTypeEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "values",
              "description": "",
              "label": "repeated",
              "type": "Value",
              "longType": "Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grants",
              "description": "",
              "label": "repeated",
              "type": "KeyAccessServer",
              "longType": "KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active",
              "description": "active by default until explicitly deactivated",
              "label": "",
              "type": "BoolValue",
              "longType": "google.protobuf.BoolValue",
              "fullType": "google.protobuf.BoolValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Condition",
          "longName": "Condition",
          "fullName": "policy.Condition",
          "description": "A Condition defines a rule of \u003cthe value at the flattened 'selector value' location\u003e \u003coperator\u003e \u003csubject external values\u003e\n\nExample:  Subjects with a field selected by the flattened selector \"'.division'\" and a value of \"Accounting\" or \"Marketing\":\n{\n\"subject_external_selector_value\": \"'.division'\",\n\"operator\": \"SUBJECT_MAPPING_OPERATOR_ENUM_IN\",\n\"subject_external_values\" : [\"Accounting\", \"Marketing\"]\n}\n\nExample: Subjects that are not part of the Fantastic Four according to their alias field:\n{\n\"subject_external_selector_value\": \"'.data[0].alias'\",\n\"operator\": \"SUBJECT_MAPPING_OPERATOR_ENUM_NOT_IN\",\n\"subject_external_values\" : [\"mister_fantastic\", \"the_thing\", \"human_torch\", \"invisible_woman\"]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_external_selector_value",
              "description": "a selector for a field value on a flattened Entity Representation (such as from idP/LDAP)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator",
              "description": "the evaluation operator of relation",
              "label": "",
              "type": "SubjectMappingOperatorEnum",
              "longType": "SubjectMappingOperatorEnum",
              "fullType": "policy.SubjectMappingOperatorEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_external_values",
              "description": "list of comparison values for the result of applying the subject_external_selector_value on a flattened Entity Representation (Subject), evaluated by the operator",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConditionGroup",
          "longName": "ConditionGroup",
          "fullName": "policy.ConditionGroup",
          "description": "A collection of Conditions evaluated by the boolean_operator provided",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "conditions",
              "description": "",
              "label": "repeated",
              "type": "Condition",
              "longType": "Condition",
              "fullType": "policy.Condition",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "boolean_operator",
              "description": "the boolean evaluation type across the conditions",
              "label": "",
              "type": "ConditionBooleanTypeEnum",
              "longType": "ConditionBooleanTypeEnum",
              "fullType": "policy.ConditionBooleanTypeEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "KeyAccessServer",
          "longName": "KeyAccessServer",
          "fullName": "policy.KeyAccessServer",
          "description": "Key Access Server Registry",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uri",
              "description": "Address of a KAS instance",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "",
              "label": "",
              "type": "PublicKey",
              "longType": "PublicKey",
              "fullType": "policy.PublicKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Namespace",
          "longName": "Namespace",
          "fullName": "policy.Namespace",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "generated uuid in database",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "used to partition Attribute Definitions, support by namespace AuthN and enable federation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active",
              "description": "active by default until explicitly deactivated",
              "label": "",
              "type": "BoolValue",
              "longType": "google.protobuf.BoolValue",
              "fullType": "google.protobuf.BoolValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublicKey",
          "longName": "PublicKey",
          "fullName": "policy.PublicKey",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "remote",
              "description": "kas public key url - optional since can also be retrieved via public key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "public_key",
              "defaultValue": ""
            },
            {
              "name": "local",
              "description": "public key - optional since can also be retrieved via url",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "public_key",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResourceMapping",
          "longName": "ResourceMapping",
          "fullName": "policy.ResourceMapping",
          "description": "Resource Mappings (aka Access Control Resource Encodings aka ACRE) are structures supporting the mapping of Resources and Attribute Values",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute_value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubjectConditionSet",
          "longName": "SubjectConditionSet",
          "fullName": "policy.SubjectConditionSet",
          "description": "A container for multiple Subject Sets, each containing Condition Groups, each containing Conditions. Multiple Subject Sets in a SubjectConditionSet\nare evaluated with AND logic. As each Subject Mapping has only one Attribute Value, the SubjectConditionSet is reusable across multiple\nSubject Mappings / Attribute Values and is an independent unit.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_sets",
              "description": "",
              "label": "repeated",
              "type": "SubjectSet",
              "longType": "SubjectSet",
              "fullType": "policy.SubjectSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubjectMapping",
          "longName": "SubjectMapping",
          "fullName": "policy.SubjectMapping",
          "description": "Subject Mapping: A Policy assigning Subject Set(s) to a permitted attribute value + action(s) combination\n\nExample: Subjects in sets 1 and 2 are entitled attribute value http://wwww.example.org/attr/example/value/one\nwith permitted actions TRANSMIT and DECRYPT\n{\n\"id\": \"someid\",\n\"attribute_value\": {example_one_attribute_value...},\n\"subject_condition_set\": {\"subject_sets\":[{subject_set_1},{subject_set_2}]...},\n\"actions\": [{\"standard\": \"STANDARD_ACTION_DECRYPT\"}\", {\"standard\": \"STANDARD_ACTION_TRANSMIT\"}]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute_value",
              "description": "the Attribute Value mapped to; aka: \"The Entity Entitlement Attribute\"",
              "label": "",
              "type": "Value",
              "longType": "Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_condition_set",
              "description": "the reusable SubjectConditionSet mapped to the given Attribute Value",
              "label": "",
              "type": "SubjectConditionSet",
              "longType": "SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "actions",
              "description": "The actions permitted by subjects in this mapping",
              "label": "repeated",
              "type": "Action",
              "longType": "Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubjectProperty",
          "longName": "SubjectProperty",
          "fullName": "policy.SubjectProperty",
          "description": "A property of a Subject/Entity as its selector expression -\u003e value result pair. This would mirror external user attributes retrieved\nfrom an authoritative source such as an IDP (Identity Provider) or User Store. Examples include such ADFS/LDAP, OKTA, etc.\nFor now, a valid property must contain both a selector expression \u0026 a resulting value.\n\nThe external_selector_value is a specifier to select a value from a flattened external representation of an Entity (such as from idP/LDAP),\nand the external_value is the value selected by the external_selector_value on that Entity Representation (Subject Context). These mirror the Condition.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_selector_value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "external_value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubjectSet",
          "longName": "SubjectSet",
          "fullName": "policy.SubjectSet",
          "description": "A collection of Condition Groups",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "condition_groups",
              "description": "multiple Condition Groups are evaluated with AND logic",
              "label": "repeated",
              "type": "ConditionGroup",
              "longType": "ConditionGroup",
              "fullType": "policy.ConditionGroup",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Value",
          "longName": "Value",
          "fullName": "policy.Value",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "generated uuid in database",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "members",
              "description": "",
              "label": "repeated",
              "type": "Value",
              "longType": "Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "grants",
              "description": "list of key access servers",
              "label": "repeated",
              "type": "KeyAccessServer",
              "longType": "KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active",
              "description": "active by default until explicitly deactivated",
              "label": "",
              "type": "BoolValue",
              "longType": "google.protobuf.BoolValue",
              "fullType": "google.protobuf.BoolValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_mappings",
              "description": "subject mapping",
              "label": "repeated",
              "type": "SubjectMapping",
              "longType": "SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "Metadata",
              "longType": "common.Metadata",
              "fullType": "common.Metadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "authorization/authorization.proto",
      "description": "",
      "package": "authorization",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "Decision",
          "longName": "DecisionResponse.Decision",
          "fullName": "authorization.DecisionResponse.Decision",
          "description": "",
          "values": [
            {
              "name": "DECISION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "DECISION_DENY",
              "number": "1",
              "description": ""
            },
            {
              "name": "DECISION_PERMIT",
              "number": "2",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "DecisionRequest",
          "longName": "DecisionRequest",
          "fullName": "authorization.DecisionRequest",
          "description": "Example Request Get Decisions to answer the question -  Do Bob (represented by entity chain ec1)\nand Alice (represented by entity chain ec2) have TRANSMIT authorization for\n2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?\n\n{\n\"actions\": [\n{\n\"standard\": \"STANDARD_ACTION_TRANSMIT\"\n}\n],\n\"entityChains\": [\n{\n\"id\": \"ec1\",\n\"entities\": [\n{\n\"emailAddress\": \"bob@example.org\"\n}\n]\n},\n{\n\"id\": \"ec2\",\n\"entities\": [\n{\n\"userName\": \"alice@example.org\"\n}\n]\n}\n],\n\"resourceAttributes\": [\n{\n\"resourceAttributeId\":  \"attr-set-1\",\n\"attributeFqns\": [\n\"https://www.example.org/attr/foo/value/value1\"\n]\n},\n{\n\"resourceAttributeId\":  \"attr-set-2\",\n\"attributeFqns\": [\n\"https://example.net/attr/attr1/value/value1\",\n\"https://example.net/attr/attr1/value/value2\"\n]\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "actions",
              "description": "",
              "label": "repeated",
              "type": "Action",
              "longType": "policy.Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_chains",
              "description": "",
              "label": "repeated",
              "type": "EntityChain",
              "longType": "EntityChain",
              "fullType": "authorization.EntityChain",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resource_attributes",
              "description": "",
              "label": "repeated",
              "type": "ResourceAttribute",
              "longType": "ResourceAttribute",
              "fullType": "authorization.ResourceAttribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DecisionResponse",
          "longName": "DecisionResponse",
          "fullName": "authorization.DecisionResponse",
          "description": "Example response for a Decision Request -  Do Bob (represented by entity chain ec1)\nand Alice (represented by entity chain ec2) have TRANSMIT authorization for\n2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?\n\nResults:\n- bob has permitted authorization to transmit for a resource defined by attr-set-1 attributes and has a watermark obligation\n- bob has denied authorization to transmit a for a resource defined by attr-set-2 attributes\n- alice has permitted authorization to transmit for a resource defined by attr-set-1 attributes\n- alice has denied authorization to transmit a for a resource defined by attr-set-2 attributes\n\n{\n\"entityChainId\":  \"ec1\",\n\"resourceAttributesId\":  \"attr-set-1\",\n\"decision\":  \"DECISION_PERMIT\",\n\"obligations\":  [\n\"http://www.example.org/obligation/watermark\"\n]\n},\n{\n\"entityChainId\":  \"ec1\",\n\"resourceAttributesId\":  \"attr-set-2\",\n\"decision\":  \"DECISION_PERMIT\"\n},\n{\n\"entityChainId\":  \"ec2\",\n\"resourceAttributesId\":  \"attr-set-1\",\n\"decision\":  \"DECISION_PERMIT\"\n},\n{\n\"entityChainId\":  \"ec2\",\n\"resourceAttributesId\":  \"attr-set-2\",\n\"decision\":  \"DECISION_DENY\"\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_chain_id",
              "description": "ephemeral entity chain id from the request",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resource_attributes_id",
              "description": "ephemeral resource attributes id from the request",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "action",
              "description": "Action of the decision response",
              "label": "",
              "type": "Action",
              "longType": "policy.Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decision",
              "description": "The decision response",
              "label": "",
              "type": "Decision",
              "longType": "DecisionResponse.Decision",
              "fullType": "authorization.DecisionResponse.Decision",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "obligations",
              "description": "optional list of obligations represented in URI format",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Entity",
          "longName": "Entity",
          "fullName": "authorization.Entity",
          "description": "PE (Person Entity) or NPE (Non-Person Entity)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ephemeral id for tracking between request and response",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "email_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "user_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "remote_claims_url",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "uuid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "claims",
              "description": "",
              "label": "",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "custom",
              "description": "",
              "label": "",
              "type": "EntityCustom",
              "longType": "EntityCustom",
              "fullType": "authorization.EntityCustom",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            },
            {
              "name": "client_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "entity_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityChain",
          "longName": "EntityChain",
          "fullName": "authorization.EntityChain",
          "description": "A set of related PE and NPE",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ephemeral id for tracking between request and response",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entities",
              "description": "",
              "label": "repeated",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "authorization.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityCustom",
          "longName": "EntityCustom",
          "fullName": "authorization.EntityCustom",
          "description": "Entity type for custom entities beyond the standard types",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "extension",
              "description": "",
              "label": "",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityEntitlements",
          "longName": "EntityEntitlements",
          "fullName": "authorization.EntityEntitlements",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute_value_fqns",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDecisionsByTokenRequest",
          "longName": "GetDecisionsByTokenRequest",
          "fullName": "authorization.GetDecisionsByTokenRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "decision_requests",
              "description": "",
              "label": "repeated",
              "type": "TokenDecisionRequest",
              "longType": "TokenDecisionRequest",
              "fullType": "authorization.TokenDecisionRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDecisionsByTokenResponse",
          "longName": "GetDecisionsByTokenResponse",
          "fullName": "authorization.GetDecisionsByTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "decision_responses",
              "description": "",
              "label": "repeated",
              "type": "DecisionResponse",
              "longType": "DecisionResponse",
              "fullType": "authorization.DecisionResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDecisionsRequest",
          "longName": "GetDecisionsRequest",
          "fullName": "authorization.GetDecisionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "decision_requests",
              "description": "",
              "label": "repeated",
              "type": "DecisionRequest",
              "longType": "DecisionRequest",
              "fullType": "authorization.DecisionRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDecisionsResponse",
          "longName": "GetDecisionsResponse",
          "fullName": "authorization.GetDecisionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "decision_responses",
              "description": "",
              "label": "repeated",
              "type": "DecisionResponse",
              "longType": "DecisionResponse",
              "fullType": "authorization.DecisionResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEntitlementsRequest",
          "longName": "GetEntitlementsRequest",
          "fullName": "authorization.GetEntitlementsRequest",
          "description": "Request to get entitlements for one or more entities for an optional attribute scope\n\nExample: Get entitlements for bob and alice (both represented using an email address\n\n{\n\"entities\": [\n{\n\"id\": \"e1\",\n\"emailAddress\": \"bob@example.org\"\n},\n{\n\"id\": \"e2\",\n\"emailAddress\": \"alice@example.org\"\n}\n],\n\"scope\": {\n\"attributeFqns\": [\n\"https://example.net/attr/attr1/value/value1\",\n\"https://example.net/attr/attr1/value/value2\"\n]\n}\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "entities",
              "description": "list of requested entities",
              "label": "repeated",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "authorization.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scope",
              "description": "optional attribute fqn as a scope",
              "label": "optional",
              "type": "ResourceAttribute",
              "longType": "ResourceAttribute",
              "fullType": "authorization.ResourceAttribute",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scope",
              "defaultValue": ""
            },
            {
              "name": "with_comprehensive_hierarchy",
              "description": "optional parameter to return a full list of entitlements - returns lower hierarchy attributes",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_with_comprehensive_hierarchy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEntitlementsResponse",
          "longName": "GetEntitlementsResponse",
          "fullName": "authorization.GetEntitlementsResponse",
          "description": "Example Response for a request of : Get entitlements for bob and alice (both represented using an email address\n\n{\n\"entitlements\":  [\n{\n\"entityId\":  \"e1\",\n\"attributeValueReferences\":  [\n{\n\"attributeFqn\":  \"http://www.example.org/attr/foo/value/bar\"\n}\n]\n},\n{\n\"entityId\":  \"e2\",\n\"attributeValueReferences\":  [\n{\n\"attributeFqn\":  \"http://www.example.org/attr/color/value/red\"\n}\n]\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entitlements",
              "description": "",
              "label": "repeated",
              "type": "EntityEntitlements",
              "longType": "EntityEntitlements",
              "fullType": "authorization.EntityEntitlements",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResourceAttribute",
          "longName": "ResourceAttribute",
          "fullName": "authorization.ResourceAttribute",
          "description": "A logical bucket of attributes belonging to a \"Resource\"",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_attributes_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute_value_fqns",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Token",
          "longName": "Token",
          "fullName": "authorization.Token",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ephemeral id for tracking between request and response",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "jwt",
              "description": "the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenDecisionRequest",
          "longName": "TokenDecisionRequest",
          "fullName": "authorization.TokenDecisionRequest",
          "description": "Example Request Get Decisions by Token to answer the question -  Do Bob and client1 (represented by token tok1)\nand Alice and client2 (represented by token tok2) have TRANSMIT authorization for\n2 resources; resource1 (attr-set-1) defined by attributes foo:bar  resource2 (attr-set-2) defined by attribute foo:bar, color:red ?\n\n{\n\"actions\": [\n{\n\"standard\": \"STANDARD_ACTION_TRANSMIT\"\n}\n],\n\"tokens\": [\n{\n\"id\": \"tok1\",\n\"jwt\": ....\n},\n{\n\"id\": \"tok2\",\n\"jwt\": .....\n}\n],\n\"resourceAttributes\": [\n{\n\"attributeFqns\": [\n\"https://www.example.org/attr/foo/value/value1\"\n]\n},\n{\n\"attributeFqns\": [\n\"https://example.net/attr/attr1/value/value1\",\n\"https://example.net/attr/attr1/value/value2\"\n]\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "actions",
              "description": "",
              "label": "repeated",
              "type": "Action",
              "longType": "policy.Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "Token",
              "longType": "Token",
              "fullType": "authorization.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resource_attributes",
              "description": "",
              "label": "repeated",
              "type": "ResourceAttribute",
              "longType": "ResourceAttribute",
              "fullType": "authorization.ResourceAttribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "AuthorizationService",
          "longName": "AuthorizationService",
          "fullName": "authorization.AuthorizationService",
          "description": "",
          "methods": [
            {
              "name": "GetDecisions",
              "description": "",
              "requestType": "GetDecisionsRequest",
              "requestLongType": "GetDecisionsRequest",
              "requestFullType": "authorization.GetDecisionsRequest",
              "requestStreaming": false,
              "responseType": "GetDecisionsResponse",
              "responseLongType": "GetDecisionsResponse",
              "responseFullType": "authorization.GetDecisionsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/authorization"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetDecisionsByToken",
              "description": "",
              "requestType": "GetDecisionsByTokenRequest",
              "requestLongType": "GetDecisionsByTokenRequest",
              "requestFullType": "authorization.GetDecisionsByTokenRequest",
              "requestStreaming": false,
              "responseType": "GetDecisionsByTokenResponse",
              "responseLongType": "GetDecisionsByTokenResponse",
              "responseFullType": "authorization.GetDecisionsByTokenResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/token/authorization"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetEntitlements",
              "description": "",
              "requestType": "GetEntitlementsRequest",
              "requestLongType": "GetEntitlementsRequest",
              "requestFullType": "authorization.GetEntitlementsRequest",
              "requestStreaming": false,
              "responseType": "GetEntitlementsResponse",
              "responseLongType": "GetEntitlementsResponse",
              "responseFullType": "authorization.GetEntitlementsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/v1/entitlements"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "entityresolution/entity_resolution.proto",
      "description": "",
      "package": "entityresolution",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreateEntityChainFromJwtRequest",
          "longName": "CreateEntityChainFromJwtRequest",
          "fullName": "entityresolution.CreateEntityChainFromJwtRequest",
          "description": "Example: Get Entity chains for tokens aaaaaa and bbbbbb\n{\n\"tokens\": [\n\"aaaaaaa\",\n\"bbbbbbbb\"\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "Token",
              "longType": "authorization.Token",
              "fullType": "authorization.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateEntityChainFromJwtResponse",
          "longName": "CreateEntityChainFromJwtResponse",
          "fullName": "entityresolution.CreateEntityChainFromJwtResponse",
          "description": "Example: Return the entity chains from the provided tokens\n{\n\"entity_chains\": [\n{\n\"id\": \"tok1\",\n\"entities\": [\n{\n\"clientId\": \"client1\"\n}\n]\n},\n{\n\"id\": \"tok2\",\n\"entities\": [\n{\n\"userName\": \"alice\",\n\"clientId\": \"client2\"\n}\n]\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_chains",
              "description": "",
              "label": "repeated",
              "type": "EntityChain",
              "longType": "authorization.EntityChain",
              "fullType": "authorization.EntityChain",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityNotFoundError",
          "longName": "EntityNotFoundError",
          "fullName": "entityresolution.EntityNotFoundError",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "details",
              "description": "",
              "label": "repeated",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityRepresentation",
          "longName": "EntityRepresentation",
          "fullName": "entityresolution.EntityRepresentation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "additional_props",
              "description": "",
              "label": "repeated",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "original_id",
              "description": "ephemeral entity id from the request",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveEntitiesRequest",
          "longName": "ResolveEntitiesRequest",
          "fullName": "entityresolution.ResolveEntitiesRequest",
          "description": "Example: Get idp attributes for bob and alice (both represented using an email address\n{\n\"entities\": [\n{\n\"id\": \"e1\",\n\"emailAddress\": \"bob@example.org\"\n},\n{\n\"id\": \"e2\",\n\"emailAddress\": \"alice@example.org\"\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entities",
              "description": "",
              "label": "repeated",
              "type": "Entity",
              "longType": "authorization.Entity",
              "fullType": "authorization.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResolveEntitiesResponse",
          "longName": "ResolveEntitiesResponse",
          "fullName": "entityresolution.ResolveEntitiesResponse",
          "description": "Example: Get idp attributes for bob and alice\n{\n\"entity_representations\": [\n{\n\"idp_entity_id\": \"e1\",\n\"additional_props\": {\"someAttr1\":\"someValue1\"}\n},\n{\n\"idp_entity_id\": \"e2\",\n\"additional_props\": {\"someAttr2\":\"someValue2\"}\n}\n]\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_representations",
              "description": "",
              "label": "repeated",
              "type": "EntityRepresentation",
              "longType": "EntityRepresentation",
              "fullType": "entityresolution.EntityRepresentation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "EntityResolutionService",
          "longName": "EntityResolutionService",
          "fullName": "entityresolution.EntityResolutionService",
          "description": "",
          "methods": [
            {
              "name": "ResolveEntities",
              "description": "",
              "requestType": "ResolveEntitiesRequest",
              "requestLongType": "ResolveEntitiesRequest",
              "requestFullType": "entityresolution.ResolveEntitiesRequest",
              "requestStreaming": false,
              "responseType": "ResolveEntitiesResponse",
              "responseLongType": "ResolveEntitiesResponse",
              "responseFullType": "entityresolution.ResolveEntitiesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/entityresolution/resolve",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateEntityChainFromJwt",
              "description": "",
              "requestType": "CreateEntityChainFromJwtRequest",
              "requestLongType": "CreateEntityChainFromJwtRequest",
              "requestFullType": "entityresolution.CreateEntityChainFromJwtRequest",
              "requestStreaming": false,
              "responseType": "CreateEntityChainFromJwtResponse",
              "responseLongType": "CreateEntityChainFromJwtResponse",
              "responseFullType": "entityresolution.CreateEntityChainFromJwtResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/entityresolution/entitychain",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "kas/kas.proto",
      "description": "",
      "package": "kas",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "InfoRequest",
          "longName": "InfoRequest",
          "fullName": "kas.InfoRequest",
          "description": "Intentionally empty. May include features later.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "InfoResponse",
          "longName": "InfoResponse",
          "fullName": "kas.InfoResponse",
          "description": "Service application level metadata",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LegacyPublicKeyRequest",
          "longName": "LegacyPublicKeyRequest",
          "fullName": "kas.LegacyPublicKeyRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "algorithm",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublicKeyRequest",
          "longName": "PublicKeyRequest",
          "fullName": "kas.PublicKeyRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "algorithm",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fmt",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "v",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PublicKeyResponse",
          "longName": "PublicKeyResponse",
          "fullName": "kas.PublicKeyResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "public_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kid",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewrapRequest",
          "longName": "RewrapRequest",
          "fullName": "kas.RewrapRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signed_request_token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RewrapResponse",
          "longName": "RewrapResponse",
          "fullName": "kas.RewrapResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "metadata",
              "description": "",
              "label": "repeated",
              "type": "MetadataEntry",
              "longType": "RewrapResponse.MetadataEntry",
              "fullType": "kas.RewrapResponse.MetadataEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_wrapped_key",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "session_public_key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schema_version",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MetadataEntry",
          "longName": "RewrapResponse.MetadataEntry",
          "fullName": "kas.RewrapResponse.MetadataEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "AccessService",
          "longName": "AccessService",
          "fullName": "kas.AccessService",
          "description": "Get app info from the root path",
          "methods": [
            {
              "name": "Info",
              "description": "Get the current version of the service",
              "requestType": "InfoRequest",
              "requestLongType": "InfoRequest",
              "requestFullType": "kas.InfoRequest",
              "requestStreaming": false,
              "responseType": "InfoResponse",
              "responseLongType": "InfoResponse",
              "responseFullType": "kas.InfoResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/kas"
                    }
                  ]
                }
              }
            },
            {
              "name": "PublicKey",
              "description": "",
              "requestType": "PublicKeyRequest",
              "requestLongType": "PublicKeyRequest",
              "requestFullType": "kas.PublicKeyRequest",
              "requestStreaming": false,
              "responseType": "PublicKeyResponse",
              "responseLongType": "PublicKeyResponse",
              "responseFullType": "kas.PublicKeyResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/kas/v2/kas_public_key"
                    }
                  ]
                }
              }
            },
            {
              "name": "LegacyPublicKey",
              "description": "buf:lint:ignore RPC_RESPONSE_STANDARD_NAME",
              "requestType": "LegacyPublicKeyRequest",
              "requestLongType": "LegacyPublicKeyRequest",
              "requestFullType": "kas.LegacyPublicKeyRequest",
              "requestStreaming": false,
              "responseType": "StringValue",
              "responseLongType": ".google.protobuf.StringValue",
              "responseFullType": "google.protobuf.StringValue",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/kas/kas_public_key"
                    }
                  ]
                }
              }
            },
            {
              "name": "Rewrap",
              "description": "",
              "requestType": "RewrapRequest",
              "requestLongType": "RewrapRequest",
              "requestFullType": "kas.RewrapRequest",
              "requestStreaming": false,
              "responseType": "RewrapResponse",
              "responseLongType": "RewrapResponse",
              "responseFullType": "kas.RewrapResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/kas/v2/rewrap",
                      "body": "*"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/selectors.proto",
      "description": "",
      "package": "policy",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AttributeDefinitionSelector",
          "longName": "AttributeDefinitionSelector",
          "fullName": "policy.AttributeDefinitionSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_namespace",
              "description": "",
              "label": "",
              "type": "NamespaceSelector",
              "longType": "AttributeDefinitionSelector.NamespaceSelector",
              "fullType": "policy.AttributeDefinitionSelector.NamespaceSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_values",
              "description": "",
              "label": "",
              "type": "ValueSelector",
              "longType": "AttributeDefinitionSelector.ValueSelector",
              "fullType": "policy.AttributeDefinitionSelector.ValueSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NamespaceSelector",
          "longName": "AttributeDefinitionSelector.NamespaceSelector",
          "fullName": "policy.AttributeDefinitionSelector.NamespaceSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ValueSelector",
          "longName": "AttributeDefinitionSelector.ValueSelector",
          "fullName": "policy.AttributeDefinitionSelector.ValueSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_subject_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_resource_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeNamespaceSelector",
          "longName": "AttributeNamespaceSelector",
          "fullName": "policy.AttributeNamespaceSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_attributes",
              "description": "",
              "label": "",
              "type": "AttributeSelector",
              "longType": "AttributeNamespaceSelector.AttributeSelector",
              "fullType": "policy.AttributeNamespaceSelector.AttributeSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeSelector",
          "longName": "AttributeNamespaceSelector.AttributeSelector",
          "fullName": "policy.AttributeNamespaceSelector.AttributeSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_values",
              "description": "",
              "label": "",
              "type": "ValueSelector",
              "longType": "AttributeNamespaceSelector.AttributeSelector.ValueSelector",
              "fullType": "policy.AttributeNamespaceSelector.AttributeSelector.ValueSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValueSelector",
          "longName": "AttributeNamespaceSelector.AttributeSelector.ValueSelector",
          "fullName": "policy.AttributeNamespaceSelector.AttributeSelector.ValueSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_subject_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_resource_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeValueSelector",
          "longName": "AttributeValueSelector",
          "fullName": "policy.AttributeValueSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_subject_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_resource_maps",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_attribute",
              "description": "",
              "label": "",
              "type": "AttributeSelector",
              "longType": "AttributeValueSelector.AttributeSelector",
              "fullType": "policy.AttributeValueSelector.AttributeSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeSelector",
          "longName": "AttributeValueSelector.AttributeSelector",
          "fullName": "policy.AttributeValueSelector.AttributeSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "with_key_access_grants",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_namespace",
              "description": "",
              "label": "",
              "type": "NamespaceSelector",
              "longType": "AttributeValueSelector.AttributeSelector.NamespaceSelector",
              "fullType": "policy.AttributeValueSelector.AttributeSelector.NamespaceSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NamespaceSelector",
          "longName": "AttributeValueSelector.AttributeSelector.NamespaceSelector",
          "fullName": "policy.AttributeValueSelector.AttributeSelector.NamespaceSelector",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": []
    },
    {
      "name": "policy/attributes/attributes.proto",
      "description": "",
      "package": "policy.attributes",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AssignKeyAccessServerToAttributeRequest",
          "longName": "AssignKeyAccessServerToAttributeRequest",
          "fullName": "policy.attributes.AssignKeyAccessServerToAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_key_access_server",
              "description": "",
              "label": "",
              "type": "AttributeKeyAccessServer",
              "longType": "AttributeKeyAccessServer",
              "fullType": "policy.attributes.AttributeKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssignKeyAccessServerToAttributeResponse",
          "longName": "AssignKeyAccessServerToAttributeResponse",
          "fullName": "policy.attributes.AssignKeyAccessServerToAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_key_access_server",
              "description": "",
              "label": "",
              "type": "AttributeKeyAccessServer",
              "longType": "AttributeKeyAccessServer",
              "fullType": "policy.attributes.AttributeKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssignKeyAccessServerToValueRequest",
          "longName": "AssignKeyAccessServerToValueRequest",
          "fullName": "policy.attributes.AssignKeyAccessServerToValueRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value_key_access_server",
              "description": "",
              "label": "",
              "type": "ValueKeyAccessServer",
              "longType": "ValueKeyAccessServer",
              "fullType": "policy.attributes.ValueKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AssignKeyAccessServerToValueResponse",
          "longName": "AssignKeyAccessServerToValueResponse",
          "fullName": "policy.attributes.AssignKeyAccessServerToValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value_key_access_server",
              "description": "",
              "label": "",
              "type": "ValueKeyAccessServer",
              "longType": "ValueKeyAccessServer",
              "fullType": "policy.attributes.ValueKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeKeyAccessServer",
          "longName": "AttributeKeyAccessServer",
          "fullName": "policy.attributes.AttributeKeyAccessServer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_access_server_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAttributeRequest",
          "longName": "CreateAttributeRequest",
          "fullName": "policy.attributes.CreateAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace_id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rule",
              "description": "",
              "label": "",
              "type": "AttributeRuleTypeEnum",
              "longType": "policy.AttributeRuleTypeEnum",
              "fullType": "policy.AttributeRuleTypeEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "values",
              "description": "Optional attribute values (when provided) must be alphanumeric strings, allowing hyphens and underscores but not as the first or last character.\nThe stored attribute value will be normalized to lower case.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAttributeResponse",
          "longName": "CreateAttributeResponse",
          "fullName": "policy.attributes.CreateAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAttributeValueRequest",
          "longName": "CreateAttributeValueRequest",
          "fullName": "policy.attributes.CreateAttributeValueRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "members",
              "description": "Optional",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateAttributeValueResponse",
          "longName": "CreateAttributeValueResponse",
          "fullName": "policy.attributes.CreateAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateAttributeRequest",
          "longName": "DeactivateAttributeRequest",
          "fullName": "policy.attributes.DeactivateAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateAttributeResponse",
          "longName": "DeactivateAttributeResponse",
          "fullName": "policy.attributes.DeactivateAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateAttributeValueRequest",
          "longName": "DeactivateAttributeValueRequest",
          "fullName": "policy.attributes.DeactivateAttributeValueRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateAttributeValueResponse",
          "longName": "DeactivateAttributeValueResponse",
          "fullName": "policy.attributes.DeactivateAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeRequest",
          "longName": "GetAttributeRequest",
          "fullName": "policy.attributes.GetAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeResponse",
          "longName": "GetAttributeResponse",
          "fullName": "policy.attributes.GetAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeValueRequest",
          "longName": "GetAttributeValueRequest",
          "fullName": "policy.attributes.GetAttributeValueRequest",
          "description": "Value RPC messages\n/",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeValueResponse",
          "longName": "GetAttributeValueResponse",
          "fullName": "policy.attributes.GetAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeValuesByFqnsRequest",
          "longName": "GetAttributeValuesByFqnsRequest",
          "fullName": "policy.attributes.GetAttributeValuesByFqnsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fqns",
              "description": "Required\nFully Qualified Names of attribute values (i.e. https://\u003cnamespace\u003e/attr/\u003cattribute_name\u003e/value/\u003cvalue_name\u003e), normalized to lower case.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "with_value",
              "description": "",
              "label": "",
              "type": "AttributeValueSelector",
              "longType": "policy.AttributeValueSelector",
              "fullType": "policy.AttributeValueSelector",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAttributeValuesByFqnsResponse",
          "longName": "GetAttributeValuesByFqnsResponse",
          "fullName": "policy.attributes.GetAttributeValuesByFqnsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fqn_attribute_values",
              "description": "map of FQNs to complete attributes and the one selected value",
              "label": "repeated",
              "type": "FqnAttributeValuesEntry",
              "longType": "GetAttributeValuesByFqnsResponse.FqnAttributeValuesEntry",
              "fullType": "policy.attributes.GetAttributeValuesByFqnsResponse.FqnAttributeValuesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributeAndValue",
          "longName": "GetAttributeValuesByFqnsResponse.AttributeAndValue",
          "fullName": "policy.attributes.GetAttributeValuesByFqnsResponse.AttributeAndValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FqnAttributeValuesEntry",
          "longName": "GetAttributeValuesByFqnsResponse.FqnAttributeValuesEntry",
          "fullName": "policy.attributes.GetAttributeValuesByFqnsResponse.FqnAttributeValuesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "AttributeAndValue",
              "longType": "GetAttributeValuesByFqnsResponse.AttributeAndValue",
              "fullType": "policy.attributes.GetAttributeValuesByFqnsResponse.AttributeAndValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAttributeValuesRequest",
          "longName": "ListAttributeValuesRequest",
          "fullName": "policy.attributes.ListAttributeValuesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "ACTIVE by default when not specified",
              "label": "",
              "type": "ActiveStateEnum",
              "longType": "common.ActiveStateEnum",
              "fullType": "common.ActiveStateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAttributeValuesResponse",
          "longName": "ListAttributeValuesResponse",
          "fullName": "policy.attributes.ListAttributeValuesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "values",
              "description": "",
              "label": "repeated",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAttributesRequest",
          "longName": "ListAttributesRequest",
          "fullName": "policy.attributes.ListAttributesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "state",
              "description": "ACTIVE by default when not specified",
              "label": "",
              "type": "ActiveStateEnum",
              "longType": "common.ActiveStateEnum",
              "fullType": "common.ActiveStateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "namespace",
              "description": "can be id or name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListAttributesResponse",
          "longName": "ListAttributesResponse",
          "fullName": "policy.attributes.ListAttributesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attributes",
              "description": "",
              "label": "repeated",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RemoveKeyAccessServerFromAttributeRequest",
          "longName": "RemoveKeyAccessServerFromAttributeRequest",
          "fullName": "policy.attributes.RemoveKeyAccessServerFromAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_key_access_server",
              "description": "",
              "label": "",
              "type": "AttributeKeyAccessServer",
              "longType": "AttributeKeyAccessServer",
              "fullType": "policy.attributes.AttributeKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RemoveKeyAccessServerFromAttributeResponse",
          "longName": "RemoveKeyAccessServerFromAttributeResponse",
          "fullName": "policy.attributes.RemoveKeyAccessServerFromAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_key_access_server",
              "description": "",
              "label": "",
              "type": "AttributeKeyAccessServer",
              "longType": "AttributeKeyAccessServer",
              "fullType": "policy.attributes.AttributeKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RemoveKeyAccessServerFromValueRequest",
          "longName": "RemoveKeyAccessServerFromValueRequest",
          "fullName": "policy.attributes.RemoveKeyAccessServerFromValueRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value_key_access_server",
              "description": "",
              "label": "",
              "type": "ValueKeyAccessServer",
              "longType": "ValueKeyAccessServer",
              "fullType": "policy.attributes.ValueKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RemoveKeyAccessServerFromValueResponse",
          "longName": "RemoveKeyAccessServerFromValueResponse",
          "fullName": "policy.attributes.RemoveKeyAccessServerFromValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value_key_access_server",
              "description": "",
              "label": "",
              "type": "ValueKeyAccessServer",
              "longType": "ValueKeyAccessServer",
              "fullType": "policy.attributes.ValueKeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAttributeRequest",
          "longName": "UpdateAttributeRequest",
          "fullName": "policy.attributes.UpdateAttributeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAttributeResponse",
          "longName": "UpdateAttributeResponse",
          "fullName": "policy.attributes.UpdateAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAttributeValueRequest",
          "longName": "UpdateAttributeValueRequest",
          "fullName": "policy.attributes.UpdateAttributeValueRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "members",
              "description": "Optional",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": "",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateAttributeValueResponse",
          "longName": "UpdateAttributeValueResponse",
          "fullName": "policy.attributes.UpdateAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValueKeyAccessServer",
          "longName": "ValueKeyAccessServer",
          "fullName": "policy.attributes.ValueKeyAccessServer",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key_access_server_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "AttributesService",
          "longName": "AttributesService",
          "fullName": "policy.attributes.AttributesService",
          "description": "Attribute Service\n/",
          "methods": [
            {
              "name": "ListAttributes",
              "description": "--------------------------------------*\nAttribute RPCs\n---------------------------------------",
              "requestType": "ListAttributesRequest",
              "requestLongType": "ListAttributesRequest",
              "requestFullType": "policy.attributes.ListAttributesRequest",
              "requestStreaming": false,
              "responseType": "ListAttributesResponse",
              "responseLongType": "ListAttributesResponse",
              "responseFullType": "policy.attributes.ListAttributesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListAttributeValues",
              "description": "",
              "requestType": "ListAttributeValuesRequest",
              "requestLongType": "ListAttributeValuesRequest",
              "requestFullType": "policy.attributes.ListAttributeValuesRequest",
              "requestStreaming": false,
              "responseType": "ListAttributeValuesResponse",
              "responseLongType": "ListAttributeValuesResponse",
              "responseFullType": "policy.attributes.ListAttributeValuesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/*/values"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetAttribute",
              "description": "",
              "requestType": "GetAttributeRequest",
              "requestLongType": "GetAttributeRequest",
              "requestFullType": "policy.attributes.GetAttributeRequest",
              "requestStreaming": false,
              "responseType": "GetAttributeResponse",
              "responseLongType": "GetAttributeResponse",
              "responseFullType": "policy.attributes.GetAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetAttributeValuesByFqns",
              "description": "",
              "requestType": "GetAttributeValuesByFqnsRequest",
              "requestLongType": "GetAttributeValuesByFqnsRequest",
              "requestFullType": "policy.attributes.GetAttributeValuesByFqnsRequest",
              "requestStreaming": false,
              "responseType": "GetAttributeValuesByFqnsResponse",
              "responseLongType": "GetAttributeValuesByFqnsResponse",
              "responseFullType": "policy.attributes.GetAttributeValuesByFqnsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/*/fqn"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateAttribute",
              "description": "",
              "requestType": "CreateAttributeRequest",
              "requestLongType": "CreateAttributeRequest",
              "requestFullType": "policy.attributes.CreateAttributeRequest",
              "requestStreaming": false,
              "responseType": "CreateAttributeResponse",
              "responseLongType": "CreateAttributeResponse",
              "responseFullType": "policy.attributes.CreateAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateAttribute",
              "description": "",
              "requestType": "UpdateAttributeRequest",
              "requestLongType": "UpdateAttributeRequest",
              "requestFullType": "policy.attributes.UpdateAttributeRequest",
              "requestStreaming": false,
              "responseType": "UpdateAttributeResponse",
              "responseLongType": "UpdateAttributeResponse",
              "responseFullType": "policy.attributes.UpdateAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/attributes/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeactivateAttribute",
              "description": "",
              "requestType": "DeactivateAttributeRequest",
              "requestLongType": "DeactivateAttributeRequest",
              "requestFullType": "policy.attributes.DeactivateAttributeRequest",
              "requestStreaming": false,
              "responseType": "DeactivateAttributeResponse",
              "responseLongType": "DeactivateAttributeResponse",
              "responseFullType": "policy.attributes.DeactivateAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/attributes/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetAttributeValue",
              "description": "--------------------------------------*\nValue RPCs\n---------------------------------------",
              "requestType": "GetAttributeValueRequest",
              "requestLongType": "GetAttributeValueRequest",
              "requestFullType": "policy.attributes.GetAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "GetAttributeValueResponse",
              "responseLongType": "GetAttributeValueResponse",
              "responseFullType": "policy.attributes.GetAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/*/values/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateAttributeValue",
              "description": "",
              "requestType": "CreateAttributeValueRequest",
              "requestLongType": "CreateAttributeValueRequest",
              "requestFullType": "policy.attributes.CreateAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "CreateAttributeValueResponse",
              "responseLongType": "CreateAttributeValueResponse",
              "responseFullType": "policy.attributes.CreateAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/{attribute_id}/values",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateAttributeValue",
              "description": "",
              "requestType": "UpdateAttributeValueRequest",
              "requestLongType": "UpdateAttributeValueRequest",
              "requestFullType": "policy.attributes.UpdateAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "UpdateAttributeValueResponse",
              "responseLongType": "UpdateAttributeValueResponse",
              "responseFullType": "policy.attributes.UpdateAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/attributes/*/values/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeactivateAttributeValue",
              "description": "",
              "requestType": "DeactivateAttributeValueRequest",
              "requestLongType": "DeactivateAttributeValueRequest",
              "requestFullType": "policy.attributes.DeactivateAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "DeactivateAttributeValueResponse",
              "responseLongType": "DeactivateAttributeValueResponse",
              "responseFullType": "policy.attributes.DeactivateAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/attributes/*/values/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "AssignKeyAccessServerToAttribute",
              "description": "--------------------------------------*\nAttribute \u003c\u003e Key Access Server RPCs\n---------------------------------------",
              "requestType": "AssignKeyAccessServerToAttributeRequest",
              "requestLongType": "AssignKeyAccessServerToAttributeRequest",
              "requestFullType": "policy.attributes.AssignKeyAccessServerToAttributeRequest",
              "requestStreaming": false,
              "responseType": "AssignKeyAccessServerToAttributeResponse",
              "responseLongType": "AssignKeyAccessServerToAttributeResponse",
              "responseFullType": "policy.attributes.AssignKeyAccessServerToAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/keyaccessserver/assign",
                      "body": "attribute_key_access_server"
                    }
                  ]
                }
              }
            },
            {
              "name": "RemoveKeyAccessServerFromAttribute",
              "description": "",
              "requestType": "RemoveKeyAccessServerFromAttributeRequest",
              "requestLongType": "RemoveKeyAccessServerFromAttributeRequest",
              "requestFullType": "policy.attributes.RemoveKeyAccessServerFromAttributeRequest",
              "requestStreaming": false,
              "responseType": "RemoveKeyAccessServerFromAttributeResponse",
              "responseLongType": "RemoveKeyAccessServerFromAttributeResponse",
              "responseFullType": "policy.attributes.RemoveKeyAccessServerFromAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/keyaccessserver/remove",
                      "body": "attribute_key_access_server"
                    }
                  ]
                }
              }
            },
            {
              "name": "AssignKeyAccessServerToValue",
              "description": "",
              "requestType": "AssignKeyAccessServerToValueRequest",
              "requestLongType": "AssignKeyAccessServerToValueRequest",
              "requestFullType": "policy.attributes.AssignKeyAccessServerToValueRequest",
              "requestStreaming": false,
              "responseType": "AssignKeyAccessServerToValueResponse",
              "responseLongType": "AssignKeyAccessServerToValueResponse",
              "responseFullType": "policy.attributes.AssignKeyAccessServerToValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/values/keyaccessserver/assign",
                      "body": "value_key_access_server"
                    }
                  ]
                }
              }
            },
            {
              "name": "RemoveKeyAccessServerFromValue",
              "description": "",
              "requestType": "RemoveKeyAccessServerFromValueRequest",
              "requestLongType": "RemoveKeyAccessServerFromValueRequest",
              "requestFullType": "policy.attributes.RemoveKeyAccessServerFromValueRequest",
              "requestStreaming": false,
              "responseType": "RemoveKeyAccessServerFromValueResponse",
              "responseLongType": "RemoveKeyAccessServerFromValueResponse",
              "responseFullType": "policy.attributes.RemoveKeyAccessServerFromValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/values/keyaccessserver/remove",
                      "body": "value_key_access_server"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/kasregistry/key_access_server_registry.proto",
      "description": "",
      "package": "policy.kasregistry",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreateKeyAccessServerRequest",
          "longName": "CreateKeyAccessServerRequest",
          "fullName": "policy.kasregistry.CreateKeyAccessServerRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "uri",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "",
              "label": "",
              "type": "PublicKey",
              "longType": "policy.PublicKey",
              "fullType": "policy.PublicKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateKeyAccessServerResponse",
          "longName": "CreateKeyAccessServerResponse",
          "fullName": "policy.kasregistry.CreateKeyAccessServerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_access_server",
              "description": "",
              "label": "",
              "type": "KeyAccessServer",
              "longType": "policy.KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteKeyAccessServerRequest",
          "longName": "DeleteKeyAccessServerRequest",
          "fullName": "policy.kasregistry.DeleteKeyAccessServerRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteKeyAccessServerResponse",
          "longName": "DeleteKeyAccessServerResponse",
          "fullName": "policy.kasregistry.DeleteKeyAccessServerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_access_server",
              "description": "",
              "label": "",
              "type": "KeyAccessServer",
              "longType": "policy.KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetKeyAccessServerRequest",
          "longName": "GetKeyAccessServerRequest",
          "fullName": "policy.kasregistry.GetKeyAccessServerRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetKeyAccessServerResponse",
          "longName": "GetKeyAccessServerResponse",
          "fullName": "policy.kasregistry.GetKeyAccessServerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_access_server",
              "description": "",
              "label": "",
              "type": "KeyAccessServer",
              "longType": "policy.KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListKeyAccessServersRequest",
          "longName": "ListKeyAccessServersRequest",
          "fullName": "policy.kasregistry.ListKeyAccessServersRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListKeyAccessServersResponse",
          "longName": "ListKeyAccessServersResponse",
          "fullName": "policy.kasregistry.ListKeyAccessServersResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_access_servers",
              "description": "",
              "label": "repeated",
              "type": "KeyAccessServer",
              "longType": "policy.KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateKeyAccessServerRequest",
          "longName": "UpdateKeyAccessServerRequest",
          "fullName": "policy.kasregistry.UpdateKeyAccessServerRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "uri",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "",
              "label": "",
              "type": "PublicKey",
              "longType": "policy.PublicKey",
              "fullType": "policy.PublicKey",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateKeyAccessServerResponse",
          "longName": "UpdateKeyAccessServerResponse",
          "fullName": "policy.kasregistry.UpdateKeyAccessServerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_access_server",
              "description": "",
              "label": "",
              "type": "KeyAccessServer",
              "longType": "policy.KeyAccessServer",
              "fullType": "policy.KeyAccessServer",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "KeyAccessServerRegistryService",
          "longName": "KeyAccessServerRegistryService",
          "fullName": "policy.kasregistry.KeyAccessServerRegistryService",
          "description": "",
          "methods": [
            {
              "name": "ListKeyAccessServers",
              "description": "",
              "requestType": "ListKeyAccessServersRequest",
              "requestLongType": "ListKeyAccessServersRequest",
              "requestFullType": "policy.kasregistry.ListKeyAccessServersRequest",
              "requestStreaming": false,
              "responseType": "ListKeyAccessServersResponse",
              "responseLongType": "ListKeyAccessServersResponse",
              "responseFullType": "policy.kasregistry.ListKeyAccessServersResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/key-access-servers"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetKeyAccessServer",
              "description": "",
              "requestType": "GetKeyAccessServerRequest",
              "requestLongType": "GetKeyAccessServerRequest",
              "requestFullType": "policy.kasregistry.GetKeyAccessServerRequest",
              "requestStreaming": false,
              "responseType": "GetKeyAccessServerResponse",
              "responseLongType": "GetKeyAccessServerResponse",
              "responseFullType": "policy.kasregistry.GetKeyAccessServerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/key-access-servers/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateKeyAccessServer",
              "description": "",
              "requestType": "CreateKeyAccessServerRequest",
              "requestLongType": "CreateKeyAccessServerRequest",
              "requestFullType": "policy.kasregistry.CreateKeyAccessServerRequest",
              "requestStreaming": false,
              "responseType": "CreateKeyAccessServerResponse",
              "responseLongType": "CreateKeyAccessServerResponse",
              "responseFullType": "policy.kasregistry.CreateKeyAccessServerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/key-access-servers",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateKeyAccessServer",
              "description": "",
              "requestType": "UpdateKeyAccessServerRequest",
              "requestLongType": "UpdateKeyAccessServerRequest",
              "requestFullType": "policy.kasregistry.UpdateKeyAccessServerRequest",
              "requestStreaming": false,
              "responseType": "UpdateKeyAccessServerResponse",
              "responseLongType": "UpdateKeyAccessServerResponse",
              "responseFullType": "policy.kasregistry.UpdateKeyAccessServerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/key-access-servers/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteKeyAccessServer",
              "description": "",
              "requestType": "DeleteKeyAccessServerRequest",
              "requestLongType": "DeleteKeyAccessServerRequest",
              "requestFullType": "policy.kasregistry.DeleteKeyAccessServerRequest",
              "requestStreaming": false,
              "responseType": "DeleteKeyAccessServerResponse",
              "responseLongType": "DeleteKeyAccessServerResponse",
              "responseFullType": "policy.kasregistry.DeleteKeyAccessServerResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/key-access-servers/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/namespaces/namespaces.proto",
      "description": "",
      "package": "policy.namespaces",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreateNamespaceRequest",
          "longName": "CreateNamespaceRequest",
          "fullName": "policy.namespaces.CreateNamespaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateNamespaceResponse",
          "longName": "CreateNamespaceResponse",
          "fullName": "policy.namespaces.CreateNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateNamespaceRequest",
          "longName": "DeactivateNamespaceRequest",
          "fullName": "policy.namespaces.DeactivateNamespaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeactivateNamespaceResponse",
          "longName": "DeactivateNamespaceResponse",
          "fullName": "policy.namespaces.DeactivateNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNamespaceRequest",
          "longName": "GetNamespaceRequest",
          "fullName": "policy.namespaces.GetNamespaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNamespaceResponse",
          "longName": "GetNamespaceResponse",
          "fullName": "policy.namespaces.GetNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNamespacesRequest",
          "longName": "ListNamespacesRequest",
          "fullName": "policy.namespaces.ListNamespacesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "state",
              "description": "ACTIVE by default when not specified",
              "label": "",
              "type": "ActiveStateEnum",
              "longType": "common.ActiveStateEnum",
              "fullType": "common.ActiveStateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNamespacesResponse",
          "longName": "ListNamespacesResponse",
          "fullName": "policy.namespaces.ListNamespacesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespaces",
              "description": "",
              "label": "repeated",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateNamespaceRequest",
          "longName": "UpdateNamespaceRequest",
          "fullName": "policy.namespaces.UpdateNamespaceRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateNamespaceResponse",
          "longName": "UpdateNamespaceResponse",
          "fullName": "policy.namespaces.UpdateNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "NamespaceService",
          "longName": "NamespaceService",
          "fullName": "policy.namespaces.NamespaceService",
          "description": "",
          "methods": [
            {
              "name": "GetNamespace",
              "description": "",
              "requestType": "GetNamespaceRequest",
              "requestLongType": "GetNamespaceRequest",
              "requestFullType": "policy.namespaces.GetNamespaceRequest",
              "requestStreaming": false,
              "responseType": "GetNamespaceResponse",
              "responseLongType": "GetNamespaceResponse",
              "responseFullType": "policy.namespaces.GetNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/namespaces/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListNamespaces",
              "description": "",
              "requestType": "ListNamespacesRequest",
              "requestLongType": "ListNamespacesRequest",
              "requestFullType": "policy.namespaces.ListNamespacesRequest",
              "requestStreaming": false,
              "responseType": "ListNamespacesResponse",
              "responseLongType": "ListNamespacesResponse",
              "responseFullType": "policy.namespaces.ListNamespacesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/attributes/namespaces"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateNamespace",
              "description": "",
              "requestType": "CreateNamespaceRequest",
              "requestLongType": "CreateNamespaceRequest",
              "requestFullType": "policy.namespaces.CreateNamespaceRequest",
              "requestStreaming": false,
              "responseType": "CreateNamespaceResponse",
              "responseLongType": "CreateNamespaceResponse",
              "responseFullType": "policy.namespaces.CreateNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/attributes/namespaces",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateNamespace",
              "description": "",
              "requestType": "UpdateNamespaceRequest",
              "requestLongType": "UpdateNamespaceRequest",
              "requestFullType": "policy.namespaces.UpdateNamespaceRequest",
              "requestStreaming": false,
              "responseType": "UpdateNamespaceResponse",
              "responseLongType": "UpdateNamespaceResponse",
              "responseFullType": "policy.namespaces.UpdateNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/attributes/namespaces/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeactivateNamespace",
              "description": "",
              "requestType": "DeactivateNamespaceRequest",
              "requestLongType": "DeactivateNamespaceRequest",
              "requestFullType": "policy.namespaces.DeactivateNamespaceRequest",
              "requestStreaming": false,
              "responseType": "DeactivateNamespaceResponse",
              "responseLongType": "DeactivateNamespaceResponse",
              "responseFullType": "policy.namespaces.DeactivateNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/attributes/namespaces/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/resourcemapping/resource_mapping.proto",
      "description": "",
      "package": "policy.resourcemapping",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreateResourceMappingRequest",
          "longName": "CreateResourceMappingRequest",
          "fullName": "policy.resourcemapping.CreateResourceMappingRequest",
          "description": "### Request\n\ngrpcurl -plaintext -d @ localhost:8080 policy.resourcemapping.ResourceMappingService/CreateResourceMapping \u003c\u003cEOM\n{\n\"mapping\": {\n\"name\": \"Classification\",\n\"attribute_value_id\": \"12345678-1234-1234-1234-123456789012\",\n\"terms\": [\"CONFIDENTIAL\", \"CONTROLLED UNCLASSIFIED\", \"OFFICIAL-SENSITIVE\", \"CUI\", \"C\"]\n}\n}\nEOM\n\n### Response\n\n{\n\"mapping\": {\n\"metadata\": {\n\"id\": \"12345678-1234-1234-1234-123456789012\",\n\"created_at\": \"2020-01-01T00:00:00Z\",\n\"updated_at\": \"2020-01-01T00:00:00Z\"\n},\n\"name\": \"Classification\",\n\"attribute_value_id\": \"12345678-1234-1234-1234-123456789012\",\n\"terms\": [\"CONFIDENTIAL\", \"CONTROLLED UNCLASSIFIED\", \"OFFICIAL-SENSITIVE\", \"CUI\", \"C\"]\n}\n}",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_value_id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateResourceMappingResponse",
          "longName": "CreateResourceMappingResponse",
          "fullName": "policy.resourcemapping.CreateResourceMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_mapping",
              "description": "",
              "label": "",
              "type": "ResourceMapping",
              "longType": "policy.ResourceMapping",
              "fullType": "policy.ResourceMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteResourceMappingRequest",
          "longName": "DeleteResourceMappingRequest",
          "fullName": "policy.resourcemapping.DeleteResourceMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteResourceMappingResponse",
          "longName": "DeleteResourceMappingResponse",
          "fullName": "policy.resourcemapping.DeleteResourceMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_mapping",
              "description": "",
              "label": "",
              "type": "ResourceMapping",
              "longType": "policy.ResourceMapping",
              "fullType": "policy.ResourceMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetResourceMappingRequest",
          "longName": "GetResourceMappingRequest",
          "fullName": "policy.resourcemapping.GetResourceMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetResourceMappingResponse",
          "longName": "GetResourceMappingResponse",
          "fullName": "policy.resourcemapping.GetResourceMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_mapping",
              "description": "",
              "label": "",
              "type": "ResourceMapping",
              "longType": "policy.ResourceMapping",
              "fullType": "policy.ResourceMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListResourceMappingsRequest",
          "longName": "ListResourceMappingsRequest",
          "fullName": "policy.resourcemapping.ListResourceMappingsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListResourceMappingsResponse",
          "longName": "ListResourceMappingsResponse",
          "fullName": "policy.resourcemapping.ListResourceMappingsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_mappings",
              "description": "",
              "label": "repeated",
              "type": "ResourceMapping",
              "longType": "policy.ResourceMapping",
              "fullType": "policy.ResourceMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateResourceMappingRequest",
          "longName": "UpdateResourceMappingRequest",
          "fullName": "policy.resourcemapping.UpdateResourceMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attribute_value_id",
              "description": "Optional",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "terms",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common Metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateResourceMappingResponse",
          "longName": "UpdateResourceMappingResponse",
          "fullName": "policy.resourcemapping.UpdateResourceMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_mapping",
              "description": "",
              "label": "",
              "type": "ResourceMapping",
              "longType": "policy.ResourceMapping",
              "fullType": "policy.ResourceMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "ResourceMappingService",
          "longName": "ResourceMappingService",
          "fullName": "policy.resourcemapping.ResourceMappingService",
          "description": "",
          "methods": [
            {
              "name": "ListResourceMappings",
              "description": "",
              "requestType": "ListResourceMappingsRequest",
              "requestLongType": "ListResourceMappingsRequest",
              "requestFullType": "policy.resourcemapping.ListResourceMappingsRequest",
              "requestStreaming": false,
              "responseType": "ListResourceMappingsResponse",
              "responseLongType": "ListResourceMappingsResponse",
              "responseFullType": "policy.resourcemapping.ListResourceMappingsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/resource-mappings"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetResourceMapping",
              "description": "",
              "requestType": "GetResourceMappingRequest",
              "requestLongType": "GetResourceMappingRequest",
              "requestFullType": "policy.resourcemapping.GetResourceMappingRequest",
              "requestStreaming": false,
              "responseType": "GetResourceMappingResponse",
              "responseLongType": "GetResourceMappingResponse",
              "responseFullType": "policy.resourcemapping.GetResourceMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/resource-mappings/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateResourceMapping",
              "description": "",
              "requestType": "CreateResourceMappingRequest",
              "requestLongType": "CreateResourceMappingRequest",
              "requestFullType": "policy.resourcemapping.CreateResourceMappingRequest",
              "requestStreaming": false,
              "responseType": "CreateResourceMappingResponse",
              "responseLongType": "CreateResourceMappingResponse",
              "responseFullType": "policy.resourcemapping.CreateResourceMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/resource-mappings",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateResourceMapping",
              "description": "",
              "requestType": "UpdateResourceMappingRequest",
              "requestLongType": "UpdateResourceMappingRequest",
              "requestFullType": "policy.resourcemapping.UpdateResourceMappingRequest",
              "requestStreaming": false,
              "responseType": "UpdateResourceMappingResponse",
              "responseLongType": "UpdateResourceMappingResponse",
              "responseFullType": "policy.resourcemapping.UpdateResourceMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/resource-mappings/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteResourceMapping",
              "description": "",
              "requestType": "DeleteResourceMappingRequest",
              "requestLongType": "DeleteResourceMappingRequest",
              "requestFullType": "policy.resourcemapping.DeleteResourceMappingRequest",
              "requestStreaming": false,
              "responseType": "DeleteResourceMappingResponse",
              "responseLongType": "DeleteResourceMappingResponse",
              "responseFullType": "policy.resourcemapping.DeleteResourceMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/resource-mappings/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/subjectmapping/subject_mapping.proto",
      "description": "",
      "package": "policy.subjectmapping",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreateSubjectConditionSetRequest",
          "longName": "CreateSubjectConditionSetRequest",
          "fullName": "policy.subjectmapping.CreateSubjectConditionSetRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_set",
              "description": "",
              "label": "",
              "type": "SubjectConditionSetCreate",
              "longType": "SubjectConditionSetCreate",
              "fullType": "policy.subjectmapping.SubjectConditionSetCreate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateSubjectConditionSetResponse",
          "longName": "CreateSubjectConditionSetResponse",
          "fullName": "policy.subjectmapping.CreateSubjectConditionSetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_set",
              "description": "",
              "label": "",
              "type": "SubjectConditionSet",
              "longType": "policy.SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateSubjectMappingRequest",
          "longName": "CreateSubjectMappingRequest",
          "fullName": "policy.subjectmapping.CreateSubjectMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute_value_id",
              "description": "Required\nAttribute Value to be mapped to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "actions",
              "description": "The actions permitted by subjects in this mapping",
              "label": "repeated",
              "type": "Action",
              "longType": "policy.Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "existing_subject_condition_set_id",
              "description": "Either of the following:\nReuse existing SubjectConditionSet (NOTE: prioritized over new_subject_condition_set)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_subject_condition_set",
              "description": "Create new SubjectConditionSet (NOTE: ignored if existing_subject_condition_set_id is provided)",
              "label": "",
              "type": "SubjectConditionSetCreate",
              "longType": "SubjectConditionSetCreate",
              "fullType": "policy.subjectmapping.SubjectConditionSetCreate",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateSubjectMappingResponse",
          "longName": "CreateSubjectMappingResponse",
          "fullName": "policy.subjectmapping.CreateSubjectMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mapping",
              "description": "",
              "label": "",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteSubjectConditionSetRequest",
          "longName": "DeleteSubjectConditionSetRequest",
          "fullName": "policy.subjectmapping.DeleteSubjectConditionSetRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteSubjectConditionSetResponse",
          "longName": "DeleteSubjectConditionSetResponse",
          "fullName": "policy.subjectmapping.DeleteSubjectConditionSetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_set",
              "description": "Only ID of deleted Subject Condition Set provided",
              "label": "",
              "type": "SubjectConditionSet",
              "longType": "policy.SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteSubjectMappingRequest",
          "longName": "DeleteSubjectMappingRequest",
          "fullName": "policy.subjectmapping.DeleteSubjectMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteSubjectMappingResponse",
          "longName": "DeleteSubjectMappingResponse",
          "fullName": "policy.subjectmapping.DeleteSubjectMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mapping",
              "description": "Only ID of the updated Subject Mapping provided",
              "label": "",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSubjectConditionSetRequest",
          "longName": "GetSubjectConditionSetRequest",
          "fullName": "policy.subjectmapping.GetSubjectConditionSetRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSubjectConditionSetResponse",
          "longName": "GetSubjectConditionSetResponse",
          "fullName": "policy.subjectmapping.GetSubjectConditionSetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_set",
              "description": "",
              "label": "",
              "type": "SubjectConditionSet",
              "longType": "policy.SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "associated_subject_mappings",
              "description": "contextualized Subject Mappings associated with this SubjectConditionSet",
              "label": "repeated",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSubjectMappingRequest",
          "longName": "GetSubjectMappingRequest",
          "fullName": "policy.subjectmapping.GetSubjectMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetSubjectMappingResponse",
          "longName": "GetSubjectMappingResponse",
          "fullName": "policy.subjectmapping.GetSubjectMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mapping",
              "description": "",
              "label": "",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListSubjectConditionSetsRequest",
          "longName": "ListSubjectConditionSetsRequest",
          "fullName": "policy.subjectmapping.ListSubjectConditionSetsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListSubjectConditionSetsResponse",
          "longName": "ListSubjectConditionSetsResponse",
          "fullName": "policy.subjectmapping.ListSubjectConditionSetsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_sets",
              "description": "",
              "label": "repeated",
              "type": "SubjectConditionSet",
              "longType": "policy.SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListSubjectMappingsRequest",
          "longName": "ListSubjectMappingsRequest",
          "fullName": "policy.subjectmapping.ListSubjectMappingsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ListSubjectMappingsResponse",
          "longName": "ListSubjectMappingsResponse",
          "fullName": "policy.subjectmapping.ListSubjectMappingsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mappings",
              "description": "",
              "label": "repeated",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatchSubjectMappingsRequest",
          "longName": "MatchSubjectMappingsRequest",
          "fullName": "policy.subjectmapping.MatchSubjectMappingsRequest",
          "description": "MatchSubjectMappingsRequest liberally returns a list of SubjectMappings based on the provided SubjectProperties. The SubjectMappings are returned\nif there is any single condition found among the structures that matches for one of the provided properties:\n1. The external selector value, external value, and an IN operator\n2. The external selector value, _no_ external value, and a NOT_IN operator\n\nWithout this filtering, if a selector value was something like '.emailAddress' or '.username', every Subject is probably going to relate to that mapping\nin some way or another, potentially matching every single attribute in the DB if a policy admin has relied heavily on that field. There is no\nlogic applied beyond a single condition within the query to avoid business logic interpreting the supplied conditions beyond the bare minimum\ninitial filter.\n\nNOTE: if you have any issues, debug logs are available within the service to help identify why a mapping was or was not returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_properties",
              "description": "",
              "label": "repeated",
              "type": "SubjectProperty",
              "longType": "policy.SubjectProperty",
              "fullType": "policy.SubjectProperty",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MatchSubjectMappingsResponse",
          "longName": "MatchSubjectMappingsResponse",
          "fullName": "policy.subjectmapping.MatchSubjectMappingsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mappings",
              "description": "",
              "label": "repeated",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubjectConditionSetCreate",
          "longName": "SubjectConditionSetCreate",
          "fullName": "policy.subjectmapping.SubjectConditionSetCreate",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_sets",
              "description": "Required",
              "label": "repeated",
              "type": "SubjectSet",
              "longType": "policy.SubjectSet",
              "fullType": "policy.SubjectSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Optional\nCommon metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSubjectConditionSetRequest",
          "longName": "UpdateSubjectConditionSetRequest",
          "fullName": "policy.subjectmapping.UpdateSubjectConditionSetRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_sets",
              "description": "Optional\nIf provided, replaces entire existing structure of Subject Sets, Condition Groups, \u0026 Conditions",
              "label": "repeated",
              "type": "SubjectSet",
              "longType": "policy.SubjectSet",
              "fullType": "policy.SubjectSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSubjectConditionSetResponse",
          "longName": "UpdateSubjectConditionSetResponse",
          "fullName": "policy.subjectmapping.UpdateSubjectConditionSetResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_condition_set",
              "description": "Only ID of updated Subject Condition Set provided",
              "label": "",
              "type": "SubjectConditionSet",
              "longType": "policy.SubjectConditionSet",
              "fullType": "policy.SubjectConditionSet",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSubjectMappingRequest",
          "longName": "UpdateSubjectMappingRequest",
          "fullName": "policy.subjectmapping.UpdateSubjectMappingRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject_condition_set_id",
              "description": "Optional\nReplaces the existing SubjectConditionSet id with a new one",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "actions",
              "description": "Replaces entire list of actions permitted by subjects",
              "label": "repeated",
              "type": "Action",
              "longType": "policy.Action",
              "fullType": "policy.Action",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Common metadata",
              "label": "",
              "type": "MetadataMutable",
              "longType": "common.MetadataMutable",
              "fullType": "common.MetadataMutable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata_update_behavior",
              "description": "",
              "label": "",
              "type": "MetadataUpdateEnum",
              "longType": "common.MetadataUpdateEnum",
              "fullType": "common.MetadataUpdateEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpdateSubjectMappingResponse",
          "longName": "UpdateSubjectMappingResponse",
          "fullName": "policy.subjectmapping.UpdateSubjectMappingResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_mapping",
              "description": "Only ID of the updated Subject Mapping provided",
              "label": "",
              "type": "SubjectMapping",
              "longType": "policy.SubjectMapping",
              "fullType": "policy.SubjectMapping",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "SubjectMappingService",
          "longName": "SubjectMappingService",
          "fullName": "policy.subjectmapping.SubjectMappingService",
          "description": "",
          "methods": [
            {
              "name": "MatchSubjectMappings",
              "description": "Find matching Subject Mappings for a given Subject",
              "requestType": "MatchSubjectMappingsRequest",
              "requestLongType": "MatchSubjectMappingsRequest",
              "requestFullType": "policy.subjectmapping.MatchSubjectMappingsRequest",
              "requestStreaming": false,
              "responseType": "MatchSubjectMappingsResponse",
              "responseLongType": "MatchSubjectMappingsResponse",
              "responseFullType": "policy.subjectmapping.MatchSubjectMappingsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/subject-mappings/match",
                      "body": "subject_properties"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListSubjectMappings",
              "description": "",
              "requestType": "ListSubjectMappingsRequest",
              "requestLongType": "ListSubjectMappingsRequest",
              "requestFullType": "policy.subjectmapping.ListSubjectMappingsRequest",
              "requestStreaming": false,
              "responseType": "ListSubjectMappingsResponse",
              "responseLongType": "ListSubjectMappingsResponse",
              "responseFullType": "policy.subjectmapping.ListSubjectMappingsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/subject-mappings"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetSubjectMapping",
              "description": "",
              "requestType": "GetSubjectMappingRequest",
              "requestLongType": "GetSubjectMappingRequest",
              "requestFullType": "policy.subjectmapping.GetSubjectMappingRequest",
              "requestStreaming": false,
              "responseType": "GetSubjectMappingResponse",
              "responseLongType": "GetSubjectMappingResponse",
              "responseFullType": "policy.subjectmapping.GetSubjectMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/subject-mappings/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateSubjectMapping",
              "description": "",
              "requestType": "CreateSubjectMappingRequest",
              "requestLongType": "CreateSubjectMappingRequest",
              "requestFullType": "policy.subjectmapping.CreateSubjectMappingRequest",
              "requestStreaming": false,
              "responseType": "CreateSubjectMappingResponse",
              "responseLongType": "CreateSubjectMappingResponse",
              "responseFullType": "policy.subjectmapping.CreateSubjectMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/subject-mappings",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateSubjectMapping",
              "description": "",
              "requestType": "UpdateSubjectMappingRequest",
              "requestLongType": "UpdateSubjectMappingRequest",
              "requestFullType": "policy.subjectmapping.UpdateSubjectMappingRequest",
              "requestStreaming": false,
              "responseType": "UpdateSubjectMappingResponse",
              "responseLongType": "UpdateSubjectMappingResponse",
              "responseFullType": "policy.subjectmapping.UpdateSubjectMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/subject-mappings/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteSubjectMapping",
              "description": "",
              "requestType": "DeleteSubjectMappingRequest",
              "requestLongType": "DeleteSubjectMappingRequest",
              "requestFullType": "policy.subjectmapping.DeleteSubjectMappingRequest",
              "requestStreaming": false,
              "responseType": "DeleteSubjectMappingResponse",
              "responseLongType": "DeleteSubjectMappingResponse",
              "responseFullType": "policy.subjectmapping.DeleteSubjectMappingResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/subject-mappings/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "ListSubjectConditionSets",
              "description": "",
              "requestType": "ListSubjectConditionSetsRequest",
              "requestLongType": "ListSubjectConditionSetsRequest",
              "requestFullType": "policy.subjectmapping.ListSubjectConditionSetsRequest",
              "requestStreaming": false,
              "responseType": "ListSubjectConditionSetsResponse",
              "responseLongType": "ListSubjectConditionSetsResponse",
              "responseFullType": "policy.subjectmapping.ListSubjectConditionSetsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/subject-condition-sets"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetSubjectConditionSet",
              "description": "",
              "requestType": "GetSubjectConditionSetRequest",
              "requestLongType": "GetSubjectConditionSetRequest",
              "requestFullType": "policy.subjectmapping.GetSubjectConditionSetRequest",
              "requestStreaming": false,
              "responseType": "GetSubjectConditionSetResponse",
              "responseLongType": "GetSubjectConditionSetResponse",
              "responseFullType": "policy.subjectmapping.GetSubjectConditionSetResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/subject-condition-sets/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CreateSubjectConditionSet",
              "description": "",
              "requestType": "CreateSubjectConditionSetRequest",
              "requestLongType": "CreateSubjectConditionSetRequest",
              "requestFullType": "policy.subjectmapping.CreateSubjectConditionSetRequest",
              "requestStreaming": false,
              "responseType": "CreateSubjectConditionSetResponse",
              "responseLongType": "CreateSubjectConditionSetResponse",
              "responseFullType": "policy.subjectmapping.CreateSubjectConditionSetResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/subject-condition-sets",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "UpdateSubjectConditionSet",
              "description": "",
              "requestType": "UpdateSubjectConditionSetRequest",
              "requestLongType": "UpdateSubjectConditionSetRequest",
              "requestFullType": "policy.subjectmapping.UpdateSubjectConditionSetRequest",
              "requestStreaming": false,
              "responseType": "UpdateSubjectConditionSetResponse",
              "responseLongType": "UpdateSubjectConditionSetResponse",
              "responseFullType": "policy.subjectmapping.UpdateSubjectConditionSetResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/subject-condition-sets/{id}",
                      "body": "*"
                    }
                  ]
                }
              }
            },
            {
              "name": "DeleteSubjectConditionSet",
              "description": "",
              "requestType": "DeleteSubjectConditionSetRequest",
              "requestLongType": "DeleteSubjectConditionSetRequest",
              "requestFullType": "policy.subjectmapping.DeleteSubjectConditionSetRequest",
              "requestStreaming": false,
              "responseType": "DeleteSubjectConditionSetResponse",
              "responseLongType": "DeleteSubjectConditionSetResponse",
              "responseFullType": "policy.subjectmapping.DeleteSubjectConditionSetResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/subject-condition-sets/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "policy/unsafe/unsafe.proto",
      "description": "",
      "package": "policy.unsafe",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "UnsafeDeleteAttributeRequest",
          "longName": "UnsafeDeleteAttributeRequest",
          "fullName": "policy.unsafe.UnsafeDeleteAttributeRequest",
          "description": "WARNING!!\nDeleting an Attribute will free up the Attribute name for reuse, which can introduce an access path to existing TDFs containing the deleted Attribute name.\nValues under this Attribute will be cascadingly deleted.\nAny KAS Grants associated with this Attribute will be cascadingly deleted.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required\nUUID of the Attribute",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "Fully Qualified Name (FQN) of Attribute Definition (i.e. https://\u003cnamespace\u003e/attr/\u003cattribute name\u003e), normalized to lower case.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeDeleteAttributeResponse",
          "longName": "UnsafeDeleteAttributeResponse",
          "fullName": "policy.unsafe.UnsafeDeleteAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeDeleteAttributeValueRequest",
          "longName": "UnsafeDeleteAttributeValueRequest",
          "fullName": "policy.unsafe.UnsafeDeleteAttributeValueRequest",
          "description": "WARNING!!\nDeleting an Attribute Value will free up the Attribute Value for reuse, which can introduce an access path to existing TDFs containing the deleted Attribute Value.\nAny KAS Grants associated with this Attribute Value will be cascadingly deleted.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required\nUUID of the Attribute Value",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "Fully Qualified Name (FQN) of Attribute Value (i.e. https://\u003cnamespace\u003e/attr/\u003cattribute name\u003e/value/\u003cvalue\u003e), normalized to lower case.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeDeleteAttributeValueResponse",
          "longName": "UnsafeDeleteAttributeValueResponse",
          "fullName": "policy.unsafe.UnsafeDeleteAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeDeleteNamespaceRequest",
          "longName": "UnsafeDeleteNamespaceRequest",
          "fullName": "policy.unsafe.UnsafeDeleteNamespaceRequest",
          "description": "WARNING!!\nDeleting a Namespace will free up the Attribute Namespace, Definitions, and Values for reuse, which can introduce an access path to existing TDFs containing the deleted policy.\nDefinitions and their Values under this Namespace will be cascadingly deleted.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required\nUUID of the Namespace",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fqn",
              "description": "Fully Qualified Name (FQN) of Namespace (i.e. https://\u003cnamespace\u003e), normalized to lower case.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeDeleteNamespaceResponse",
          "longName": "UnsafeDeleteNamespaceResponse",
          "fullName": "policy.unsafe.UnsafeDeleteNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateAttributeRequest",
          "longName": "UnsafeReactivateAttributeRequest",
          "fullName": "policy.unsafe.UnsafeReactivateAttributeRequest",
          "description": "WARNING!!\nReactivating an Attribute can potentially open up an access path to existing TDFs containing the Attribute name.\nActive state of any Values under this Attribute Definition will NOT be changed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateAttributeResponse",
          "longName": "UnsafeReactivateAttributeResponse",
          "fullName": "policy.unsafe.UnsafeReactivateAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateAttributeValueRequest",
          "longName": "UnsafeReactivateAttributeValueRequest",
          "fullName": "policy.unsafe.UnsafeReactivateAttributeValueRequest",
          "description": "WARNING!!\nReactivating an Attribute Value can potentially open up an access path to existing TDFs containing the Attribute Value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateAttributeValueResponse",
          "longName": "UnsafeReactivateAttributeValueResponse",
          "fullName": "policy.unsafe.UnsafeReactivateAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateNamespaceRequest",
          "longName": "UnsafeReactivateNamespaceRequest",
          "fullName": "policy.unsafe.UnsafeReactivateNamespaceRequest",
          "description": "WARNING!!\nReactivating a Namespace can potentially open up an access path to existing TDFs containing any Attributes under the Namespace.\nActive state of any Definitions and their Values under this Namespace will NOT be changed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeReactivateNamespaceResponse",
          "longName": "UnsafeReactivateNamespaceResponse",
          "fullName": "policy.unsafe.UnsafeReactivateNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateAttributeRequest",
          "longName": "UnsafeUpdateAttributeRequest",
          "fullName": "policy.unsafe.UnsafeUpdateAttributeRequest",
          "description": "WARNING!!\nUpdating an Attribute can have dangerous consequences. Use with caution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Optional\nWARNING!! \nUpdating the name of an Attribute will retroactively alter access to existing TDFs of the old and new Attribute name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rule",
              "description": "WARNING!! \nUpdating the rule of an Attribute will retroactively alter access to existing TDFs of the Attribute name.",
              "label": "",
              "type": "AttributeRuleTypeEnum",
              "longType": "policy.AttributeRuleTypeEnum",
              "fullType": "policy.AttributeRuleTypeEnum",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "values_order",
              "description": "WARNING!!\nUnsafe reordering requires the full list of values in the new order they should be stored. Updating the order of values in a HIERARCHY-rule Attribute Definition\nwill retroactively alter access to existing TDFs containing those values. Replacing values on an attribute in place is not supported; values can be unsafely deleted\ndeleted, created, and unsafely re-ordered as necessary.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateAttributeResponse",
          "longName": "UnsafeUpdateAttributeResponse",
          "fullName": "policy.unsafe.UnsafeUpdateAttributeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "attribute",
              "description": "",
              "label": "",
              "type": "Attribute",
              "longType": "policy.Attribute",
              "fullType": "policy.Attribute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateAttributeValueRequest",
          "longName": "UnsafeUpdateAttributeValueRequest",
          "fullName": "policy.unsafe.UnsafeUpdateAttributeValueRequest",
          "description": "WARNING!! \nUpdating an Attribute Value will retroactively alter access to existing TDFs containing the old and new Attribute Value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateAttributeValueResponse",
          "longName": "UnsafeUpdateAttributeValueResponse",
          "fullName": "policy.unsafe.UnsafeUpdateAttributeValueResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "policy.Value",
              "fullType": "policy.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateNamespaceRequest",
          "longName": "UnsafeUpdateNamespaceRequest",
          "fullName": "policy.unsafe.UnsafeUpdateNamespaceRequest",
          "description": "WARNING!!\nUpdating the Namespace of an Attribute will retroactively alter access to existing TDFs of the old and new Namespace name.\nExisting Attribute Definitions and their Values under the Namespace will now be associated with the new Namespace name.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Required",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnsafeUpdateNamespaceResponse",
          "longName": "UnsafeUpdateNamespaceResponse",
          "fullName": "policy.unsafe.UnsafeUpdateNamespaceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "namespace",
              "description": "",
              "label": "",
              "type": "Namespace",
              "longType": "policy.Namespace",
              "fullType": "policy.Namespace",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "UnsafeService",
          "longName": "UnsafeService",
          "fullName": "policy.unsafe.UnsafeService",
          "description": "Unsafe Service \n/ IN FLIGHT AND NOT YET IMPLEMENTED!\n/",
          "methods": [
            {
              "name": "UnsafeUpdateNamespace",
              "description": "--------------------------------------*\nNamespace RPCs\n---------------------------------------",
              "requestType": "UnsafeUpdateNamespaceRequest",
              "requestLongType": "UnsafeUpdateNamespaceRequest",
              "requestFullType": "policy.unsafe.UnsafeUpdateNamespaceRequest",
              "requestStreaming": false,
              "responseType": "UnsafeUpdateNamespaceResponse",
              "responseLongType": "UnsafeUpdateNamespaceResponse",
              "responseFullType": "policy.unsafe.UnsafeUpdateNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/unsafe/namespaces/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeReactivateNamespace",
              "description": "",
              "requestType": "UnsafeReactivateNamespaceRequest",
              "requestLongType": "UnsafeReactivateNamespaceRequest",
              "requestFullType": "policy.unsafe.UnsafeReactivateNamespaceRequest",
              "requestStreaming": false,
              "responseType": "UnsafeReactivateNamespaceResponse",
              "responseLongType": "UnsafeReactivateNamespaceResponse",
              "responseFullType": "policy.unsafe.UnsafeReactivateNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/unsafe/namespaces/{id}/reactivate"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeDeleteNamespace",
              "description": "",
              "requestType": "UnsafeDeleteNamespaceRequest",
              "requestLongType": "UnsafeDeleteNamespaceRequest",
              "requestFullType": "policy.unsafe.UnsafeDeleteNamespaceRequest",
              "requestStreaming": false,
              "responseType": "UnsafeDeleteNamespaceResponse",
              "responseLongType": "UnsafeDeleteNamespaceResponse",
              "responseFullType": "policy.unsafe.UnsafeDeleteNamespaceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/unsafe/namespaces/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeUpdateAttribute",
              "description": "--------------------------------------*\nAttribute RPCs\n---------------------------------------",
              "requestType": "UnsafeUpdateAttributeRequest",
              "requestLongType": "UnsafeUpdateAttributeRequest",
              "requestFullType": "policy.unsafe.UnsafeUpdateAttributeRequest",
              "requestStreaming": false,
              "responseType": "UnsafeUpdateAttributeResponse",
              "responseLongType": "UnsafeUpdateAttributeResponse",
              "responseFullType": "policy.unsafe.UnsafeUpdateAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/unsafe/attributes/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeReactivateAttribute",
              "description": "",
              "requestType": "UnsafeReactivateAttributeRequest",
              "requestLongType": "UnsafeReactivateAttributeRequest",
              "requestFullType": "policy.unsafe.UnsafeReactivateAttributeRequest",
              "requestStreaming": false,
              "responseType": "UnsafeReactivateAttributeResponse",
              "responseLongType": "UnsafeReactivateAttributeResponse",
              "responseFullType": "policy.unsafe.UnsafeReactivateAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/unsafe/attributes/{id}/reactivate"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeDeleteAttribute",
              "description": "",
              "requestType": "UnsafeDeleteAttributeRequest",
              "requestLongType": "UnsafeDeleteAttributeRequest",
              "requestFullType": "policy.unsafe.UnsafeDeleteAttributeRequest",
              "requestStreaming": false,
              "responseType": "UnsafeDeleteAttributeResponse",
              "responseLongType": "UnsafeDeleteAttributeResponse",
              "responseFullType": "policy.unsafe.UnsafeDeleteAttributeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/unsafe/attributes/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeUpdateAttributeValue",
              "description": "--------------------------------------*\nValue RPCs\n---------------------------------------",
              "requestType": "UnsafeUpdateAttributeValueRequest",
              "requestLongType": "UnsafeUpdateAttributeValueRequest",
              "requestFullType": "policy.unsafe.UnsafeUpdateAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "UnsafeUpdateAttributeValueResponse",
              "responseLongType": "UnsafeUpdateAttributeValueResponse",
              "responseFullType": "policy.unsafe.UnsafeUpdateAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "PATCH",
                      "pattern": "/unsafe/attributes/values/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeReactivateAttributeValue",
              "description": "",
              "requestType": "UnsafeReactivateAttributeValueRequest",
              "requestLongType": "UnsafeReactivateAttributeValueRequest",
              "requestFullType": "policy.unsafe.UnsafeReactivateAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "UnsafeReactivateAttributeValueResponse",
              "responseLongType": "UnsafeReactivateAttributeValueResponse",
              "responseFullType": "policy.unsafe.UnsafeReactivateAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "POST",
                      "pattern": "/unsafe/attributes/values/{id}/reactivate"
                    }
                  ]
                }
              }
            },
            {
              "name": "UnsafeDeleteAttributeValue",
              "description": "",
              "requestType": "UnsafeDeleteAttributeValueRequest",
              "requestLongType": "UnsafeDeleteAttributeValueRequest",
              "requestFullType": "policy.unsafe.UnsafeDeleteAttributeValueRequest",
              "requestStreaming": false,
              "responseType": "UnsafeDeleteAttributeValueResponse",
              "responseLongType": "UnsafeDeleteAttributeValueResponse",
              "responseFullType": "policy.unsafe.UnsafeDeleteAttributeValueResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "DELETE",
                      "pattern": "/unsafe/attributes/values/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "wellknownconfiguration/wellknown_configuration.proto",
      "description": "",
      "package": "wellknownconfiguration",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetWellKnownConfigurationRequest",
          "longName": "GetWellKnownConfigurationRequest",
          "fullName": "wellknownconfiguration.GetWellKnownConfigurationRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetWellKnownConfigurationResponse",
          "longName": "GetWellKnownConfigurationResponse",
          "fullName": "wellknownconfiguration.GetWellKnownConfigurationResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "configuration",
              "description": "",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WellKnownConfig",
          "longName": "WellKnownConfig",
          "fullName": "wellknownconfiguration.WellKnownConfig",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "configuration",
              "description": "",
              "label": "repeated",
              "type": "ConfigurationEntry",
              "longType": "WellKnownConfig.ConfigurationEntry",
              "fullType": "wellknownconfiguration.WellKnownConfig.ConfigurationEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConfigurationEntry",
          "longName": "WellKnownConfig.ConfigurationEntry",
          "fullName": "wellknownconfiguration.WellKnownConfig.ConfigurationEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "WellKnownService",
          "longName": "WellKnownService",
          "fullName": "wellknownconfiguration.WellKnownService",
          "description": "",
          "methods": [
            {
              "name": "GetWellKnownConfiguration",
              "description": "",
              "requestType": "GetWellKnownConfigurationRequest",
              "requestLongType": "GetWellKnownConfigurationRequest",
              "requestFullType": "wellknownconfiguration.GetWellKnownConfigurationRequest",
              "requestStreaming": false,
              "responseType": "GetWellKnownConfigurationResponse",
              "responseLongType": "GetWellKnownConfigurationResponse",
              "responseFullType": "wellknownconfiguration.GetWellKnownConfigurationResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/.well-known/opentdf-configuration"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}